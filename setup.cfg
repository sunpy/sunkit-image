[metadata]
name = sunkit_image
author = The SunPy Community
author_email = sunpy@googlegroups.com
description = A image processing toolbox for Solar Physics.
long_description = file: README.rst
long_description_content_type = text/x-rst
license = BSD 3-Clause
url = http://docs.sunpy.org/projects/sunkit-image/
edit_on_github = True
github_project = sunpy/sunkit-image
platform = any
keywords = solar physics, solar, science, sun, image analysis
classifiers =
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Topic :: Scientific/Engineering :: Physics

[options]
python_requires = >=3.6
packages = find:
include_package_data = True
setup_requires =
  cython
  setuptools_scm
install_requires =
  scikit-image
  sunpy>=1.0.0
  # For now
  pillow<7.1.0

[options.extras_require]
tests =
  pytest-astropy
  pytest-cov
  tox
docs =
  sphinx
  sphinx-astropy
  sphinx-gallery
  sunpy-sphinx-theme
  towncrier

[options.package_data]
sunkit_image.data = test/*
sunkit_image.tests = figure_hashes_py37.json

[ah_bootstrap]
auto_use = True

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
testpaths = "sunkit_image" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".history"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = --doctest-rst -m "not figure"
markers =
  online: marks this test function as needing online connectivity.
  figure: marks this test function as using hash-based Matplotlib figure verification. This mark is not meant to be directly applied, but is instead automatically applied when a test function uses the @sunpy.tests.helpers.figure_test decorator.
remote_data_strict = True

[pycodestyle]
max_line_length = 110

[flake8]
max-line-length = 110

[isort]
default_section = THIRDPARTY
force_grid_wrap = 0
include_trailing_comma = true
known_astropy = astropy, asdf, sunpy
known_first_party = sunkit_image
length_sort = False
length_sort_stdlib = True
line_length = 110
multi_line_output = 3
skip = .history/,
not_skip = __init__.py
sections = FUTURE, STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
  */sunkit_image/__init__*
  */sunkit_image/*/tests/*
  */sunkit_image/*setup*
  */sunkit_image/conftest.py
  */sunkit_image/cython_version*
  */sunkit_image/extern/*
  */sunkit_image/version*
  sunkit_image/__init__*
  sunkit_image/*/tests/*
  sunkit_image/*setup*
  sunkit_image/conftest.py
  sunkit_image/cython_version*
  sunkit_image/extern/*
  sunkit_image/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
