[tox]
envlist =
    py{36,37,38}{,-oldestdeps,-devdeps,-online}
    build_docs
    figure_py37
    codestyle
isolated_build = true

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/master/.test_package_pins.txt
# We use bash in some of our enviroments so we have to whitelist it.
whitelist_externals=
    /bin/bash
    /usr/bin/bash
# Run the tests in a temporary directory to make sure that we don't import
# sunkit_image from the source tree
changedir = .tmp/{envname}
# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest -vvv -ra --pyargs sunkit_image --cov-report= --cov=sunkit_image --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    SUNPY_SAMPLEDIR = {env:SUNPY_SAMPLEDIR:{toxinidir}/.tox/{envname}/sample_data/}
passenv =
    HTTP_PROXY
    HTTPS_PROXY
    NO_PROXY
deps =
    # We need this for some packages.
    setuptools
    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist

    # The devdeps factor is intended to be used to install the latest developer version.
    # of key dependencies.
    devdeps: git+https://github.com/scikit-image/scikit-image.git
    devdeps: git+https://github.com/sunpy/sunpy.git

    # Oldest deps we pin against.
    oldestdeps: sunpy<2
    oldestdeps: scikit-image<0.15.0

    # These are specific online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout

    # Coverage reporting
    pytest-cov

# The following indicates which extras_require from setup.cfg will be installed
# dev is special in that it installs everything
extras =
    dev
commands =
    !online-!hypothesis: {env:PYTEST_COMMAND} {posargs}
    # We have online figure tests we don't want to run.
    online: {env:PYTEST_COMMAND} --reruns 2 --timeout=180 --remote-data=any -m "remote_data and not figure" {posargs}
    devdeps: bash -ec "for f in {toxinidir}/examples/*/*.py; do [[ $f == *skip* ]] && continue; echo "$f" && python "$f"; done"

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --all-files

# This env requires tox-conda.
[testenv:figure_py37]
pypi_filter =
basepython = python3.7
description = Run all figure tests with pinned versions
extras = dev
conda_deps =
    python = 3.7.2
    astropy = 3.2.3
    numpy = 1.16.2
    freetype = 2.10
    matplotlib = 3.1.1
    scipy = 1.2.1
    pandas = 0.24.2
conda_channels = conda-forge
commands = {env:PYTEST_COMMAND} -m "figure" --remote-data=any {posargs}
