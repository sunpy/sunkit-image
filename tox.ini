[tox]
min_version = 4.0
envlist =
    py{310,311,312}
    py312-devdeps
    py310-oldestdeps
    codestyle
    build_docs
requires =
    setuptools
    pip
    tox-pypi-filter>=0.14

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
allowlist_externals =
    /bin/bash
    /usr/bin/bash
change_dir = .tmp/{envname}
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    devdeps: with the latest developer version of key dependencies
    online: that require remote data
pass_env =
    # A variable to tell tests we are on a CI system
    CI
    # Custom compiler locations (such as ccache)
    CC
    # Location of locales (needed by sphinx on some systems)
    LOCALE_ARCHIVE
    # If the user has set a LC override we should follow it
    LC_ALL
set_env =
    MPLBACKEND = agg
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
    COLUMNS = 180
    SUNPY_SAMPLEDIR = {env:SUNPY_SAMPLEDIR:{toxinidir}/.tox/{envname}/sample_data/}
    PARFIVE_HIDE_PROGRESS = True
deps =
    # For packages which publish nightly wheels this will pull the latest nightly
    devdeps: numpy>=0.0.dev0
    devdeps: sunpy>=0.0.dev0
    devdeps: scikit_image>=0.0.dev0
    # Packages without nightly wheels will be built from source like this
    # devdeps: git+https://github.com/scikit-image/scikit-image.git
    # Handle minimum dependencies via minimum_dependencies
    oldestdeps: minimum_dependencies
    # Figure tests need a tightly controlled environment
    figure-!devdeps: astropy==6.1.0
    figure-!devdeps: matplotlib==3.9.0
    figure-!devdeps: sunpy==6.0.0
# The following indicates which extras_require will be installed
extras =
    all
    tests
commands_pre =
    oldestdeps: minimum_dependencies sunkit_image --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    oldestdeps: python -c "import astropy.time; astropy.time.update_leap_seconds()"
    pip freeze --all --no-input
commands =
    # To amend the pytest command for different factors you can add a line
    # which starts with a factor like `online: --remote-data=any \`
    # If you have no factors which require different commands this is all you need:
    !figure: pip freeze --all --no-input
    # We have online figure tests we don't want to run.
    figure: /bin/bash -c "mkdir -p ./figure_test_images; python -c 'import matplotlib as mpl; print(mpl.ft2font.__file__, mpl.ft2font.__freetype_version__, mpl.ft2font.__freetype_build_type__)' > ./figure_test_images/figure_version_info.txt"
    figure: /bin/bash -c "pip freeze --all --no-input >> ./figure_test_images/figure_version_info.txt"
    figure: /bin/bash -c "cat ./figure_test_images/figure_version_info.txt"
    figure: python -c "import sunkit_image.tests.helpers as h; print(h.get_hash_library_name())"
    pytest \
    -vvv \
    -r fEs \
    --pyargs sunkit_image \
    --cov-report=xml \
    --cov=sunkit_image \
    --cov-config={toxinidir}/.coveragerc \
    online: --remote-data=any \
    {toxinidir}/docs \
    figure: -m "mpl_image_compare" \
    figure: --mpl \
    figure: --remote-data=any \
    figure: --mpl-generate-summary=html \
    figure: --mpl-baseline-path=https://raw.githubusercontent.com/sunpy/sunpy-figure-tests/sunkit-image-main/figures/{envname} \
    {posargs}

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure

[testenv:build_docs]
change_dir = docs
description = Invoke sphinx-build to build the HTML docs
extras =
    all
    docs
commands =
    pip freeze --all --no-input
    sphinx-build --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'
